# Mimir Distributed Helm Chart - Cleaned Values
# Optimized for performance and storage efficiency

# Core Mimir Configuration
mimir:
  config: |
    usage_stats:
      installation_mode: helm
    activity_tracker:
      filepath: /active-query-tracker/activity.log
    limits:
      ingestion_rate: ${limits_ingestion_rate}
      ingestion_burst_size: ${limits_ingestion_burst_size}
      max_fetched_chunks_per_query: ${limits_max_fetched_chunks_per_query}
      max_global_series_per_user: 500000
      max_cache_freshness: ${limits_max_cache_freshness}
    memberlist:
      join_members:
      - dns+mimir-gossip-ring.mimir.svc.cluster.local:7946
    blocks_storage:
      backend: gcs
      gcs:
        bucket_name: "${data_bucket_name}"
      bucket_store:
        sync_dir: "/data"
        chunks_cache:
          backend: memcached
          memcached:
            addresses: mimir-chunks-cache.mimir.svc:11211
            max_item_size: ${chunks_cache_max_item_memory_mb}
            timeout: 750ms
            max_idle_connections: 150
        index_cache:
          backend: memcached
          memcached:
            addresses: mimir-index-cache.mimir.svc:11211
            max_item_size: ${index_cache_max_item_memory_mb}
            timeout: 750ms
            max_idle_connections: 150
        metadata_cache:
          backend: memcached
          memcached:
            addresses: mimir-metadata-cache.mimir.svc:11211
            max_item_size: ${metadata_cache_max_item_memory_mb}
            max_idle_connections: 150
      tsdb:
        dir: "/data"
        retention_period: 24h
        head_compaction_interval: 15m
    compactor:
      data_dir: "/data"
      compaction_interval: 4h
      deletion_delay: 1h
    frontend:
      scheduler_address: mimir-query-scheduler.mimir.svc:9095
      split_queries_by_interval: 15m
    frontend_worker:
      scheduler_address: mimir-query-scheduler.mimir.svc:9095
    alertmanager:
      data_dir: /data
    query_scheduler:
      max_outstanding_requests_per_tenant: ${limits_max_outstanding_requests_per_tenant}
    ruler:
      rule_path: /data
    ruler_storage:
      cache:
        backend: memcached
        memcached:
          addresses: mimir-metadata-cache.mimir.svc:11211
          max_item_size: ${metadata_cache_max_item_memory_mb}
    runtime_config:
      file: /var/mimir/runtime.yaml
    store_gateway:
      sharding_ring:
        kvstore:
          prefix: multi-zone/
          store: memberlist
        replication_factor: ${store_gateway_replication_factor}

# Image Configuration
image:
  repository: grafana/mimir
  tag: 2.10.4

# Global Settings
global:
  clusterDomain: cluster.local
  dnsNamespace: kube-system
  dnsService: kube-dns

# Core Components - Distributor
distributor:
  replicas: ${distributor_replicas}
  resources:
    requests:
      %{~ if  distributor_min_cpu != "null"  ~}
      cpu: ${distributor_min_cpu}
      %{~ else ~}
      cpu: 200m
      %{~ endif ~}
      %{~ if  distributor_min_memory != "null"  ~}
      memory: ${distributor_min_memory}
      %{~ else ~}
      memory: 1Gi
      %{~ endif ~}
    limits:
      %{~ if  distributor_max_cpu != "null"  ~}
      cpu: ${distributor_max_cpu}
      %{~ endif ~}
      %{~ if  distributor_max_memory != "null"  ~}
      memory: ${distributor_max_memory}
      %{~ else ~}
      memory: 2Gi
      %{~ endif ~}
  extraVolumes:
    - name: ${cluster_name}-mimir-google-credentials
      secret:
        secretName: ${cluster_name}-mimir-google-credentials
  extraVolumeMounts:
    - name: ${cluster_name}-mimir-google-credentials
      mountPath: /etc/mimir/google/
  env:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: "/etc/mimir/google/gcs.json"

# Core Components - Ingester
ingester:
  replicas: ${ingester_replicas}
  lifecycler:
    ring:
      replication_factor: 2
  statefulSet:
    enabled: true
  zoneAwareReplication:
    enabled: false
  persistentVolume:
    size: ${ingester_persistence_volume_size}
  wal:
    enabled: true
    flush_on_shutdown: true
    flush_idle_period: 1m
    replay_memory_ceiling: 512MB
  resources:
    requests:
      %{~ if  ingester_min_cpu != "null"  ~}
      cpu: ${ingester_min_cpu}
      %{~ else ~}
      cpu: 500m
      %{~ endif ~}
      %{~ if  ingester_min_memory != "null"  ~}
      memory: ${ingester_min_memory}
      %{~ else ~}
      memory: 2Gi
      %{~ endif ~}
    limits:
      %{~ if  ingester_max_cpu != "null"  ~}
      cpu: ${ingester_max_cpu}
      %{~ endif ~}
      %{~ if  ingester_max_memory != "null"  ~}
      memory: ${ingester_max_memory}
      %{~ else ~}
      memory: 4Gi
      %{~ endif ~}
  extraVolumes:
    - name: ${cluster_name}-mimir-google-credentials
      secret:
        secretName: ${cluster_name}-mimir-google-credentials
  extraVolumeMounts:
    - name: ${cluster_name}-mimir-google-credentials
      mountPath: /etc/mimir/google/
  env:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: "/etc/mimir/google/gcs.json"

# Core Components - Querier
querier:
  replicas: ${querier_replicas}
  concurrency: 8
  resources:
    requests:
      %{~ if  querier_min_cpu != "null"  ~}
      cpu: ${querier_min_cpu}
      %{~ else ~}
      cpu: 500m
      %{~ endif ~}
      %{~ if  querier_min_memory != "null"  ~}
      memory: ${querier_min_memory}
      %{~ else ~}
      memory: 4Gi
      %{~ endif ~}
    limits:
      %{~ if  querier_max_cpu != "null"  ~}
      cpu: ${querier_max_cpu}
      %{~ endif ~}
      %{~ if  querier_max_memory != "null"  ~}
      memory: ${querier_max_memory}
      %{~ else ~}
      memory: 6Gi
      %{~ endif ~}
  extraVolumes:
    - name: ${cluster_name}-mimir-google-credentials
      secret:
        secretName: ${cluster_name}-mimir-google-credentials
  extraVolumeMounts:
    - name: ${cluster_name}-mimir-google-credentials
      mountPath: /etc/mimir/google/
  env:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: "/etc/mimir/google/gcs.json"

# Core Components - Query Frontend
query_frontend:
  replicas: ${query_frontend_replicas}
  resources:
    requests:
      cpu: 200m
      memory: 2Gi
    limits:
      memory: 4Gi
  extraVolumes:
    - name: ${cluster_name}-mimir-google-credentials
      secret:
        secretName: ${cluster_name}-mimir-google-credentials
  extraVolumeMounts:
    - name: ${cluster_name}-mimir-google-credentials
      mountPath: /etc/mimir/google/
  env:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: "/etc/mimir/google/gcs.json"

# Core Components - Query Scheduler
query_scheduler:
  enabled: true
  replicas: 2
  resources:
    requests:
      cpu: 100m
      memory: 256Mi

# Storage Components - Compactor
compactor:
  replicas: ${compactor_replicas}
  persistentVolume:
    enabled: ${compactor_persistence_volume_enable}
    size: ${compactor_persistence_volume_size}
  resources:
    requests:
      %{~ if  compactor_min_cpu != "null"  ~}
      cpu: ${compactor_min_cpu}
      %{~ else ~}
      cpu: 500m
      %{~ endif ~}
      %{~ if  compactor_min_memory != "null"  ~}
      memory: ${compactor_min_memory}
      %{~ else ~}
      memory: 4Gi
      %{~ endif ~}
    limits:
      %{~ if  compactor_max_cpu != "null"  ~}
      cpu: ${compactor_max_cpu}
      %{~ endif ~}
      %{~ if  compactor_max_memory != "null"  ~}
      memory: ${compactor_max_memory}
      %{~ else ~}
      memory: 6Gi
      %{~ endif ~}
  extraVolumes:
    - name: ${cluster_name}-mimir-google-credentials
      secret:
        secretName: ${cluster_name}-mimir-google-credentials
        defaultMode: 0640
  extraVolumeMounts:
    - name: ${cluster_name}-mimir-google-credentials
      mountPath: /etc/mimir/google/
  env:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: "/etc/mimir/google/gcs.json"

# Storage Components - Store Gateway
store_gateway:
  zoneAwareReplication:
    enabled: false
  persistentVolume:
    size: ${store_gateway_persistence_volume_size}
  replicas: ${store_gateway_replicas}
  resources:
    requests:
      %{~ if  store_gateway_min_cpu != "null"  ~}
      cpu: ${store_gateway_min_cpu}
      %{~ else ~}
      cpu: 500m
      %{~ endif ~}
      %{~ if  store_gateway_min_memory != "null"  ~}
      memory: ${store_gateway_min_memory}
      %{~ else ~}
      memory: 2Gi
      %{~ endif ~}
    limits:
      %{~ if  store_gateway_max_cpu != "null"  ~}
      cpu: ${store_gateway_max_cpu}
      %{~ endif ~}
      %{~ if  store_gateway_max_memory != "null"  ~}
      memory: ${store_gateway_max_memory}
      %{~ else ~}
      memory: 4Gi
      %{~ endif ~}
  extraVolumes:
    - name: ${cluster_name}-mimir-google-credentials
      secret:
        secretName: ${cluster_name}-mimir-google-credentials
  extraVolumeMounts:
    - name: ${cluster_name}-mimir-google-credentials
      mountPath: /etc/mimir/google/
  env:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: "/etc/mimir/google/gcs.json"

# Caching Components - Optimized for Performance
chunks-cache:
  enabled: ${chunks_cache_enabled}
  replicas: ${chunks_cache_replicas}
  maxItemMemory: ${chunks_cache_max_item_memory}
  connectionLimit: ${chunks_cache_connection_limit}
  resources:
    requests:
      cpu: 0.1
      memory: 1Gi

index-cache:
  enabled: ${index_cache_enabled}
  replicas: ${index_cache_replicas}
  maxItemMemory: ${index_cache_max_item_memory}
  connectionLimit: ${index_cache_connection_limit}
  resources:
    requests:
      cpu: 0.1
      memory: 512Mi

results-cache:
  enabled: true
  allocatedMemory: 2048
  maxItemMemory: 5
  replicas: 2
  resources:
    requests:
      cpu: 0.1
      memory: 256Mi

metadata-cache:
  enabled: ${metadata_cache_enabled}
  replicas: ${metadata_cache_replicas}
  maxItemMemory: ${metadata_cache_max_item_memory}
  connectionLimit: ${metadata_cache_connection_limit}

gr-aggr-cache:
  enabled: true
  allocatedMemory: 8192
  replicas: 1

gr-metricname-cache:
  enabled: true
  allocatedMemory: 8192
  replicas: 1

# Alerting Components
ruler:
  enabled: true
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
  extraVolumes:
    - name: ${cluster_name}-mimir-google-credentials
      secret:
        secretName: ${cluster_name}-mimir-google-credentials
  extraVolumeMounts:
    - name: ${cluster_name}-mimir-google-credentials
      mountPath: /etc/mimir/google/
  env:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: "/etc/mimir/google/gcs.json"

# Alertmanager Component
alertmanager:
  enabled: true
  replicas: 3
  resources:
    limits:
      memory: 1.4Gi
    requests:
      cpu: 0.1
      memory: 1Gi
  persistentVolume:
    enabled: true
    size: 1Gi
  extraVolumes:
    - name: ${cluster_name}-mimir-google-credentials
      secret:
        secretName: ${cluster_name}-mimir-google-credentials
  extraVolumeMounts:
    - name: ${cluster_name}-mimir-google-credentials
      mountPath: /etc/mimir/google/
  env:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: "/etc/mimir/google/gcs.json"

# Monitoring Components
overrides_exporter:
  enabled: true
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

# Operational Components
rollout_operator:
  enabled: true
  resources:
    limits:
      cpu: "1"
      memory: 200Mi
    requests:
      cpu: 100m
      memory: 100Mi

# Memcached Configuration
memcached:
  image:
    repository: memcached
    tag: 1.6.19-alpine

memcachedExporter:
  enabled: true
  image:
    repository: prom/memcached-exporter
    tag: v0.11.2

# Disabled Components
nginx:
  enabled: false

minio:
  enabled: false

# RBAC Configuration
rbac:
  create: true
  type: psp
  podSecurityContext:
    fsGroup: 10001
    runAsGroup: 10001
    runAsNonRoot: true
    runAsUser: 10001
    seccompProfile:
      type: RuntimeDefault

# Service Account
serviceAccount:
  create: true

# External Config
useExternalConfig: false
configStorageType: ConfigMap